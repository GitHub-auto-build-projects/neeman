Settings.swift
	public class Settings
	public static var sharedInstanceForTesting: Settings?
	public static var sharedInstance: Settings
	public let keychain: Keychain
	public let appName: String
	public var authToken: String?
	public var baseURLFromPlist: String
	public var baseURL: String
	public let authCookieName: String?
	public let recoverPasswordURL: String
	public let color1: UIColor?
	public let color2: UIColor?
	public let isNavbarDark: Bool
	public init(path: String?)
LoginOperation.swift
	public class LoginOperation: GroupOperation, OperationObserver
	public var authToken: String?
	public init(appName: String, username: String, password: String)
	public func operationDidStart(operation: Operation)
	public func operation(operation: Operation, didProduceOperation newOperation: NSOperation)
	public func operationDidFinish(operation: Operation, errors: [NSError])
GroupDockLoginOperation.swift
	public class GroupDockLoginOperation: GroupOperation
DeviceTokenOperation.swift
	public class DeviceTokenOperation: GroupOperation
Appearence.swift
	public class Appearence
	public static let sharedInstance = Appearence()
	public func setup()
GroupDockSingleSignOnOperation.swift
	public class GroupDockSingleSignOnOperation: GroupOperation
Operation.swift
	override public var ready: Bool
	override public var executing: Bool
	override public var finished: Bool
	override public var cancelled: Bool
	public func addObserver(observer: OperationObserver)
	override public func addDependency(operation: NSOperation)
	override final public func start()
	override public func cancel()
	override public func waitUntilFinished()
GroupOperation.swift
	public init(operations: [NSOperation])
	override public func cancel()
OperationQueue.swift
	override public func addOperation(operation: NSOperation)
	override public func addOperations(operations: [NSOperation], waitUntilFinished wait: Bool)
WebViewController.swift
	override public func viewDidLoad()
	override public func viewWillAppear(animated: Bool)
	public override func viewDidDisappear(animated: Bool)
	public func didLogout(notification: NSNotification)
	public func didLogin(notification: NSNotification)
	override public func observeValueForKeyPath(keyPathOpt: String?,
        ofObject object: AnyObject?,
        change: [String : AnyObject]?,
        context: UnsafeMutablePointer<Void>)
	public func pushNewWebViewControllerWithURL(url: NSURL)
	public func showLogin()
